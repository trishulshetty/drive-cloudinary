<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://unpkg.com/@tailwindcss/browser@4"></script>
  <link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet">
  <style>
    body { 
      display: flex; 
      flex-direction: column; 
      padding-top: 2rem;
      min-height: 100vh; 
      margin: 0; 
      background-color: #121212; 
    }
    
    .container {
      width: 90%;
      max-width: 1200px;
      margin: 0 auto;
    }
    
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      border-bottom: 1px solid #333;
      padding-bottom: 1rem;
    }
    
    .upload-btn {
      background-color: #3b82f6;
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 500;
      transition: all 0.2s ease;
      border: none;
      cursor: pointer;
    }
    
    .upload-btn:hover {
      background-color: #2563eb;
      transform: translateY(-2px);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .file-list-container {
      background-color: #1e1e1e;
      border-radius: 0.5rem;
      padding: 1.5rem;
      width: 100%;
    }
    
    .file-list {
      color: white;
      list-style-type: none;
      padding: 0;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1rem;
    }
    
    .file-list li {
      background-color: #2a2a2a;
      padding: 1rem;
      border-radius: 0.375rem;
      transition: all 0.2s ease;
    }
    
    .file-list li:hover {
      background-color: #333;
      transform: translateY(-2px);
    }
    
    .file-list a {
      color: #60a5fa;
      text-decoration: none;
      display: block;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    
    .file-list a:hover {
      color: #93c5fd;
    }
    
    .pop {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.75);
      backdrop-filter: blur(5px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 100;
    }
    
    .hidden {
      display: none;
    }
    
    .modal-content {
      background-color: #2a2a2a;
      padding: 2rem;
      border-radius: 0.75rem;
      width: 450px;
      position: relative;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
    }
    
    .close-button {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: none;
      border: none;
      color: #9ca3af;
      font-size: 1.25rem;
      cursor: pointer;
      transition: color 0.2s ease;
    }
    
    .close-button:hover {
      color: white;
    }
    
    .submit-button {
      margin-top: 1.5rem;
      background-color: #3b82f6;
      color: white;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 0.375rem;
      cursor: pointer;
      transition: all 0.2s ease;
      font-weight: 500;
      width: 100%;
    }
    
    .submit-button:hover {
      background-color: #2563eb;
    }
    
    .section-title {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      color: white;
      font-weight: 500;
    }
    
    .file-count {
      color: #9ca3af;
      margin-left: 0.5rem;
      font-size: 0.875rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Header with Upload Button -->
    <div class="header">
      <h1 class="section-title">File Management</h1>
      <button onclick="showpopup()" class="upload-btn">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 5v14M5 12h14"></path>
        </svg>
        Upload File
      </button>
    </div>

    <!-- File List Section -->
    <div class="file-list-container">
      <h2 class="section-title">Uploaded Files</h2>
      <ul class="file-list" id="fileList">
        <% files.forEach(file => { %>
            <li>
                <a href="<%= file.url %>" target="_blank"><%= file.name %></a>
            </li>
        <% }); %>
      </ul>
    </div>
  </div>

  <!-- Modal -->
  <div class="pop hidden" id="uploadModal">
    <div class="modal-content">
      <button class="close-button" onclick="closepopup()">Ã—</button>
      <h2 class="section-title">Upload New File</h2>

      <form id="uploadForm">
        <!-- File Name Input -->
        <div class="mb-4">
          <label for="fileName" class="block text-sm font-medium text-gray-300 mb-1">File Name</label>
          <input type="text" id="fileName" placeholder="Enter file name" required class="w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 focus:outline-none" />
        </div>

        <!-- File Upload -->
        <div class="mb-4">
          <label for="fileInput" class="flex flex-col items-center justify-center w-full h-40 border-2 border-gray-600 border-dashed rounded-lg cursor-pointer bg-gray-700 hover:bg-gray-600 transition duration-300">
            <div class="flex flex-col items-center justify-center pt-5 pb-6">
              <svg class="w-10 h-10 mb-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
              </svg>
              <p class="mb-2 text-sm text-gray-400">Click to upload or drag and drop</p>
              <p class="text-xs text-gray-500">SVG, PNG, JPG, GIF, PDF, DOC</p>
            </div>
            <input id="fileInput" type="file" class="hidden" required />
          </label>
          <p id="selectedFileName" class="mt-2 text-sm text-gray-400 truncate"></p>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="submit-button">Upload File</button>
      </form>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", async () => {
      try {
        const response = await fetch("/files"); // GET request to fetch files
        if (!response.ok) throw new Error("Failed to load files");

        const files = await response.json();
        files.forEach(file => addFileToList(file.name, file.url));
      } catch (error) {
        console.error("Error loading files:", error);
      }
    });

    function showpopup() {
      document.getElementById('uploadModal').classList.remove('hidden');
    } 

    function closepopup() {
      document.getElementById('uploadModal').classList.add('hidden');
      document.getElementById('fileName').value = '';
      document.getElementById('fileInput').value = '';
      document.getElementById('selectedFileName').textContent = '';
    }

    // Display selected filename
    document.getElementById('fileInput').addEventListener('change', function(e) {
      const fileName = e.target.files[0] ? e.target.files[0].name : '';
      document.getElementById('selectedFileName').textContent = fileName ? `Selected: ${fileName}` : '';
    });

    document.getElementById("uploadForm").addEventListener("submit", async function (e) {
      e.preventDefault();
      
      const fileInput = document.getElementById("fileInput");
      const fileName = document.getElementById("fileName").value;

      if (!fileInput.files.length) {
        alert("Please select a file!");
        return;
      }

      const formData = new FormData();
      formData.append("file", fileInput.files[0]);
      formData.append("name", fileName);

      try {
        const response = await fetch("/upload", { method: "POST", body: formData });

        if (!response.ok) {
          throw new Error(`Upload failed: ${response.statusText}`);
        }

        const data = await response.json();
        addFileToList(data.name, data.url);
        closepopup();
      } catch (error) {
        alert(error.message);
      }
    });

    function addFileToList(name, url) {
      const fileList = document.getElementById("fileList");
      const listItem = document.createElement("li");
      const link = document.createElement("a");
      link.href = url;
      link.textContent = name;
      link.target = "_blank";
      listItem.appendChild(link);
      fileList.appendChild(listItem);
    }
    
    
  </script>
</body>
</html>
